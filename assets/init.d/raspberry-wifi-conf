#! /bin/sh
# /etc/init.d/raspberry-wifi-conf

### BEGIN INIT INFO
# Provides:          raspberry-wifi-conf
# Required-Start:    $local_fs $syslog $network
# Required-Stop:     $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Script to ensure wifi connectivity
# Description:       A NodeJS application to ensure Wifi connectivity by setting the RPI as an AP if needed
### END INIT INFO

# Add path to node
PATH=/usr/local/bin/node:$PATH

tool_path="/raspberry-wifi-conf"
server_pid_file="/raspberry-wifi-conf/node.pid"

# Carry out specific functions when asked to by the system
case "$1" in

    start)
        if [ ! -f $server_pid_file ]; then
            echo "Starting raspberry-wifi-conf service..."
            cd $tool_path
            sudo node server.js &
            echo $! > node.pid
        else
            echo "Server is already running. PID is $pid"
        fi
        ;;

    stop)
        if [ -f $server_pid_file ]; then
            echo "Stopping raspberry-wifi-conf service..."
            pid=$(cat $server_pid_file)
            sudo kill -9 $pid
            sudo kill -9 $((pid + 1)) # why this?
            sudo rm $server_pid_file
            # sudo killall node # lheck workaround
        fi
        ;;

    restart)
        /etc/init.d/raspberry-wifi-conf stop
        sleep 1
        /etc/init.d/raspberry-wifi-conf start
        ;;

    status)
        if [ -f $server_pid_file ]; then
            pid=$(cat $server_pid_file)
            echo "PID: $pid"
            sudo ps aux | grep $pid
        else
            echo "raspberry-wifi-conf is not running."
        fi
        ;;

    *)
        echo "Usage: /etc/init.d/raspberry-wifi-conf {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
